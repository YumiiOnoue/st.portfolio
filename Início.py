import streamlit as st
from PIL import Image
import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from sklearn.linear_model import LinearRegression
import joblib


st.set_page_config(page_title="Erica Yumi Onoue - Portf√≥lio Analista de Dados",
                    page_icon="üìä",
                    layout="wide")

# --- Carrega o CSS ---
css_path = os.path.join(os.path.dirname(__file__), "style", "main.css")
with open(css_path) as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# -- Link para carregar os √≠cones do Font Awesome -- 
    st.markdown("""
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
        """, unsafe_allow_html=True)


# ============= Layout no Streamlit ===============

# --- In√≠cio ---
def pagina_inicio():
    st.title("Bem vindo(a) ao meu portf√≥lio!")
    col1, col2 = st.columns(2, gap="small")
    with col1:
        url = "https://i.postimg.cc/Rhj9Cg5Y/perfil-erica.jpg"
        st.image(url, width=200)
        st.markdown("üìÑ[Visualizar Curr√≠culo](https://drive.google.com/file/d/11WRTjxHsgX6m_YtW0NkLyb8B-U3XFrrE/view?usp=sharing)", unsafe_allow_html=True)

    with col2:
        st.markdown('''
                    <style>
                    .no-spacing-h3 {
                        line-height: 1; 
                        margin: 0;    
                        padding: 0;
                    }
                    </style>
                    <h3 class="no-spacing-h3">
                    Eu sou Erica Yumi Onoue <br>
                    Analista de Dados 
                    </h3>
                    ''',
                    unsafe_allow_html=True)
        st.markdown('''Estou em transi√ß√£o de carreira para a √°rea de Dados, trazendo comigo mais de quatro 
                    anos de experi√™ncia como auxiliar administrativo e uma s√≥lida forma√ß√£o em Economia, 
                    com gradua√ß√£o e mestrado na √°rea. 
                    ''')
        
    st.markdown('-------------') 
    st.markdown('### Sobre mim')
    st.markdown('''
                Desde a faculdade, desenvolvi interesse por dados, 
                tendo elaborado projetos de an√°lise sobre o setor cultural e a importa√ß√£o de produtos farmac√™uticos.
                Durante minha trajet√≥ria profissional, tive a oportunidade de aplicar a an√°lise de dados 
                no dia a dia da empresa: criei dashboards por tipo de entrega, produzi relat√≥rios de vendas 
                e estoque, al√©m de propor sugest√µes de produtos e promo√ß√µes com base em dados. Essas 
                experi√™ncias refor√ßaram meu desejo de migrar definitivamente para o campo da an√°lise de dados.
                ''')
    st.markdown('''                
                Atualmente, venho me dedicando ao desenvolvimento das compet√™ncias essenciais para atuar 
                como Analista de Dados, com foco em **An√°lise e Manipula√ß√£o de Dados**, **Python**, **SQL**, **Power BI** 
                e ferramentas de controle de vers√£o (Git/GitHub). Estou em constante aprendizado e busco 
                aplicar esse conhecimento em projetos pr√°ticos que resolvam problemas reais de neg√≥cio.
                ''')
    

# --- Habilidades ---    
    st.markdown('---------')
    st.markdown("### Habilidades T√©cnicas")
    st.markdown("""
    <div style='display: flex; flex-wrap: wrap; gap: 8px;'>

    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Python</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Pandas</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>NumPy</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>SQL</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Power BI</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Seaborn</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Matplotlib</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Scikit-learn</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Git & GitHub</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Jupyter Notebook</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>VS Code</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Estat√≠stica</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Excel</span>
    </div>
    """, unsafe_allow_html=True)


# --- Breve descri√ß√£o dos Projetos ---
    st.markdown('-------------') 
    with st.container():
            st.markdown('### Projetos')
            st.markdown('Aqui voc√™ encontrar√° uma breve descri√ß√£o de cada projeto, ok?')
            st.markdown('‚¨ÖÔ∏è Para verificar os projetos completos √© s√≥ clicar no menu lateral √† esquerda ou no bot√£o logo abaixo.')
            st.markdown('---------')
            
            tab1, tab2, tab3 = st.tabs(["üìä Dashboard de Vendas", "üîç An√°lise Explorat√≥ria de Dados", "üîÆ Modelo Preditivo"])
            with tab2:
                st.markdown('#### An√°lise Explorat√≥ria de um Marketplace')
                st.markdown('''
                    * **Objetivo:** objetivo identificar pontos chaves da empresa para que o CEO possa 
                            entender melhor o neg√≥cio e conseguir tomar decis√µes estrat√©gicas.
                    * **Metodologia:** Python, manipula√ß√£o de dados, visualiza√ß√£o de dados em Streamlit e 
                        versionamento com Github.
                    * **Resultados:** um painel gerencial com as principais m√©tricas da empresa.
                            ''')
                if st.button('Visualizar projeto completo', key='projeto_2'):
                    projeto_2() 


            with tab3:    
                st.markdown('#### Modelo Preditivo dos im√≥veis de Boston')
                st.markdown(''' 
                    * **Objetivo:** fazer uma previs√£o dos valores dos im√≥veis de Boston.
                    * **Metodologia:** foi utilizado a Regress√£o Linear e considerando MEDV 
                        (valor m√©dio de casas ocupadas) a vari√°vel dependente.                   
                    * **Resultados:** um painel interativo, onde o usu√°rio pode alterar as caracter√≠sticas do im√≥vel
                            para verificar o pre√ßo estimado. 
                            ''')
                if st.button('Visualizar projeto completo', key='projeto_3'):
                    projeto_3()

            with tab1:
                st.markdown('#### Dashboard de Vendas Cafeteria')
                st.markdown('''
                    * **Objetivo:** Criar um painel gerencial em Power BI para insights das vendas.
                    * **Metodologia:** os dados foram analisados no jupyter notebook para obter c√°lculos estat√≠sticos e
                            utilizado o Power BI para gerar gr√°ficos interativos com os principais KPIs de vendas.
                    * **Resultado:** a empresa apresenta receita crescente nas suas tr√™s lojas. Sendo, a categoria Caf√© e Ch√° os
                            mais comercializados.
                            ''')
                if st.button('Visualizar projeto completo', key='projeto_1'):
                    projeto_1() 

# ---- Contato ------
    st.markdown('-------------')
    st.markdown('### Contato')
    st.markdown('Obrigada por visitar meu portf√≥lio! üíô')
    st.markdown('''
                Se voc√™ quiser conversar sobre oportunidades, tirar d√∫vidas sobre meus projetos ou apenas 
                bater um papo sobre dados e tecnologia, estou √† disposi√ß√£o.
                ''')
    st.markdown("""
        <div style="display: flex; gap: 30px; font-size: 18px; align-items: center;">
            <a href="https://linkedin.com/in/ericayumionoue" target="_blank" style="text-decoration: none; color: inherit;">
                <i class="fab fa-linkedin"></i> LinkedIn
            </a>
            <a href="https://github.com/YumiiOnoue" target="_blank" style="text-decoration: none; color: inherit;">
                <i class="fab fa-github"></i> GitHub
            </a>
            <a href="mailto:eyumiio@gmail.com" style="text-decoration: none; color: inherit;">
                <i class="fas fa-envelope"></i> E-mail
            </a>
        </div>
        """, unsafe_allow_html=True)
    
# ============= Fun√ß√£o dos Projetos ===============
# ================================================= 
# =================  Projeto 1 ==================== 
def projeto_1():
    st.title('Dashboard de Vendas')
    st.markdown('## Cafeteria ‚òï')
    st.markdown("""
    <div style='display: flex; flex-wrap: wrap; gap: 8px;'>
    
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Python</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Pandas</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>NumPy</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Power BI</span>
    
    </div>
    """, unsafe_allow_html=True)

    st.markdown('### Objetivo')
    st.markdown('''
            Este projeto tem como objetivo realizar uma an√°lise explorat√≥ria dos dados de vendas de uma 
                cafeteria, com foco em fornecer ao CEO uma vis√£o abrangente sobre:

            * As receitas totais e as quantidades vendidas;
            * O desempenho individual de cada loja;
            * Os produtos mais rent√°veis.    
            
            A an√°lise visa apoiar decis√µes estrat√©gicas baseadas em dados, identificando oportunidades de 
            crescimento e otimizando o mix de produtos.    
                ''')
    st.markdown('### Metodologia')
    st.markdown('''
            * An√°lise descritiva em Power BI
            * C√°lculos estat√≠sticos em Python
                ''')
    st.markdown("""
    <a href="https://github.com/YumiiOnoue/Coffee_shop_sales_EDA/tree/main" target="_blank">
        <button style="
            background-color: #3b9ecf;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 12px;
            cursor: pointer;
            transition: background-color 0.3s;
        ">
            <i class="fab fa-github"></i> Ver c√≥digo no GitHub
        </button>
    </a>
    """, unsafe_allow_html=True)    
    st.markdown('### Vis√£o Geral dos Dados')
    st.markdown('''
            * O per√≠odo da an√°lise √© de janeiro a junho de 2023.                
            * O banco de dados possui 149.116 transa√ß√µes de tr√™s lojas (Hell's Kitchen, Astoria e Lower Manhattan).
            * A m√©dia de produtos por transa√ß√£o √© de 1,44 e no m√°ximo 8 produtos.
            * O desvio padr√£o da receita e do pre√ßo apresentaram dispers√£o alta.
            * O maior pre√ßo √∫nico √© do caf√© civete (US$45.00), que est√° muito acima da m√©dia, indicando outlier.
            ''')

    st.markdown('### An√°lise Gr√°fica')   
    st.markdown('A an√°lise gr√°fica foi realizada no Power BI. Para interagir com o dashboard de vendas √© s√≥ clicar [aqui](https://app.powerbi.com/view?r=eyJrIjoiYmMwMmQyNzgtMzJjMC00ZTViLThjNzAtYWRlODFhOGE0Y2E1IiwidCI6IjJlYjE0NDQ3LTQ0YWQtNDllZi04YjhmLTA5OWEzNTlhYjZkYSJ9).')
    st.markdown('Logo abaixo voc√™ ter√° o dashboard de forma est√°tico. (Em atualiza√ß√£o)')

    st.markdown('### Insights')
    st.markdown('''
            * Faturamento de US$698.81 mil, totalizando 214 mil vendas. 
            * Ticket m√©dio de US$3.26 nos seis primeiros meses de 2023. 
            * Tanto a receita quanto as vendas aumentaram ao longo do per√≠odo analisado.
            * As tr√™s lojas apresentaram receitas superiores a US$230 mil.
            * O hor√°rio de abertura, √†s 6h, √© o de maior movimento, e o das 19h, o de menor fluxo.
            * As categorias de produto que mais contribuem para a receita das lojas s√£o: caf√©, ch√° e padaria. 
            * O produto l√≠der nas tr√™s lojas √© o Sustainably Grown Organic e os blends de chai tradicional.
            * A loja de Astoria opera duas horas a menos.
            * Todas as categorias apresentaram crescimento nas vendas, com destaque para caf√© e ch√°.
            * A categoria padaria, terceira colocada no ranking de vendas, representando 74,7% a menos que o 
                caf√© e 66,9% a menos que o ch√°.
            ''')

    st.markdown('### Conclus√µes') 
    st.markdown('''
            * As vendas das tr√™s lojas est√£o em crescimento, com destaque para a unidade de Hell's Kitchen. 
            * A unidade de Astoria tem desempenho inferior de vendas e menor tempo de funcionamento.
            * Pode ser interessante investir em promo√ß√µes ou programas de fidelidade focados em produtos sustent√°veis 
                e org√¢nico.  
            * A categoria padaria mostra potencial de crescimento e pode se beneficiar de um maior investimento estrat√©gico.
            * Produtos como Chili Mayan, Caramel Syrup, Brazilian Organic, Chocolate Chip Biscotti e Almond Croissant 
                apresentam baixo desempenho e precisam de maior aten√ß√£o estrat√©gica, seja para reposicionamento, ajuste de pre√ßo ou revis√£o da oferta.
            ''')

# ================================================= 
# =================  Projeto 2 ==================== 
def projeto_2():
    st.title('An√°lise Explorat√≥ria de Dados')
    st.markdown('## Marketplace üõçÔ∏è')
    st.markdown("""
    <div style='display: flex; flex-wrap: wrap; gap: 8px;'>
    
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Python</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Pandas</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>NumPy</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Streamlit</span>
    
    </div>
    """, unsafe_allow_html=True)
    st.markdown('### Objetivo')
    st.markdown('Esse projeto teve como objetivo identificar pontos chaves da empresa ' \
            'para que o CEO possa entender melhor o neg√≥cio e conseguir tomar as melhores decis√µes ' \
            'estrat√©gicas.')
    
    st.markdown('### Vis√£o Geral dos Dados')
    st.markdown('''
            * A an√°lise foi realizada para 15 pa√≠ses.
            * Analisado mais de 4 milh√µes de avalia√ß√µes.
            * 165 tipos de culin√°ria.
            * Foram utilizadas tr√™s tipos de vis√µes da empresa: por pa√≠s, por cidade e por restaurante
                ''')        
    st.markdown("""
    <a href="https://github.com/YumiiOnoue/projeto_fome_zero" target="_blank">
        <button style="
            background-color: #3b9ecf;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 12px;
            cursor: pointer;
            transition: background-color 0.3s;
        ">
            <i class="fab fa-github"></i> Ver c√≥digo no GitHub
        </button>
    </a>
    """, unsafe_allow_html=True)   
    st.markdown('### Resultados')
    st.markdown('''
            * A √çndia representa grande parcela dos restaurantes cadastrados na plataforma.
            * Muitos dos restaurantes n√£o apresentam a op√ß√£o de pedido online e entregas.
            * O dashboard criado dessa an√°lise est√° nesse [link](https://eyo-projeto-fome-zero.streamlit.app/).
                ''')

    st.markdown('### Conclus√µes') 
    st.markdown('Ap√≥s analisar os dados, pode-se observar que s√£o poucos os pa√≠ses que utilizam a plataforma e a ' \
            'maioria dos restaurantes cadastrados est√£o na √çndia.')

# ================================================= 
# =================  Projeto 3 ==================== 
def projeto_3():
    st.title('Modelo Preditivo')
    st.markdown('## Im√≥veis de Boston üè¢')
    st.markdown("""
    <div style='display: flex; flex-wrap: wrap; gap: 8px;'>

    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Python</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Pandas</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>NumPy</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Matplotlib</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Seaborn</span>
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Sklearn</span>            
    <span style='background-color:#7e5bef; color:white; padding:6px 14px; margin:4px; border-radius:20px; font-size:14px; display:inline-block;'>Streamlit</span>

    </div>
    """, unsafe_allow_html=True)    
    st.markdown('### Objetivo')
    st.markdown('O objetivo principal √© criar um modelo que estime o valor de um im√≥vel em Boston considerando diversos atributos.')
    st.markdown('### Metodologia')    
    st.markdown('''
                * Os dados foram coletadas pelo U.S Census Service e est√£o dispon√≠veis nesse [link](https://www.cs.toronto.edu/~delve/data/boston/bostonDetail.html).
                * Para essa an√°lise foram utilizados 14 atributos.
                * Para prever os valores dos im√≥veis, foi utilizado a Regress√£o Linear e considerando MEDV (valor m√©dio de casas 
                ocupadas) a vari√°vel dependente.
                * Os gr√°ficos foram feitos com seaborn e matplotlit.
                * Para regress√£o e m√©tricas de valida√ß√£o foi utilizado o sklearn.
                ''')
    
    st.markdown('### An√°lise Explorat√≥ria dos dados')
    
    #---- Carregar dados -------------
    @st.cache_data
    def load_data():
        url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.data'
        columns = [
            'CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE',
            'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV'
        ]
        df = pd.read_csv(url, delim_whitespace=True, names=columns)
        return df

    df = load_data()

    with st.expander('üîç Visualizar dados'):
        st.dataframe(df.head())

    st.markdown('##### Dispers√£o entre N√∫mero de Quartos (RM) e Pre√ßo (MEDV)')
    fig1, ax1 = plt.subplots(figsize=(10, 8))
    sns.scatterplot(data=df, x='RM', y='MEDV', ax=ax1)
    st.pyplot(fig1)

    st.markdown('##### Mapa de Correla√ß√£o entre Vari√°veis')
    fig2, ax2 = plt.subplots(figsize=(10, 8))
    sns.heatmap(df.corr(), annot=True, cmap='coolwarm', ax=ax2)
    st.pyplot(fig2)

    st.markdown('--------')
    tab1, tab2 = st.tabs(["üìä M√©tricas de Valida√ß√£o", "üìà Previs√£o de Pre√ßo"])
    with tab1:
        nomes_extenso = {
            'CRIM': 'CRIM - Taxa de criminalidade',
            'ZN': 'ZN - Propor√ß√£o de terrenos residenciais',
            'INDUS': 'INDUS - Propor√ß√£o de √°rea industrial',
            'CHAS': 'CHAS - Fronteira com rio Charles',
            'NOX': 'NOX - √ìxidos de nitrog√™nio',
            'RM': 'RM - N√∫mero m√©dio de quartos',
            'AGE': 'AGE - Propor√ß√£o de unidades antigas',
            'DIS': 'DIS - Dist√¢ncia para centros de emprego',
            'RAD': 'RAD - Acessibilidade a rodovias',
            'TAX': 'TAX - Imposto sobre propriedade',
            'PTRATIO': 'PTRATIO - Propor√ß√£o aluno/professor',
            'B': 'B - Propor√ß√£o de afro-americanos',
            'LSTAT': 'LSTAT - Baixo status socioecon√¥mico'
        }
        st.markdown('### M√©tricas de Valida√ß√£o')
        # Lista de vari√°veis dispon√≠veis para o usu√°rio escolher (exceto a vari√°vel alvo)
        variaveis = [col for col in df.columns if col != 'MEDV']
        variaveis_escolhidas = st.multiselect("Escolha as vari√°veis independentes (X):", variaveis, default=variaveis)

        # Separar vari√°veis
        if variaveis_escolhidas:
            X = df[variaveis_escolhidas]
            y = df['MEDV']

            # Treinar modelo de regress√£o linear
            X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
            modelo = LinearRegression()
            modelo.fit(X_train, y_train)
            y_pred = modelo.predict(X_test)

            # Coeficientes
            st.markdown("#### Coeficientes da Regress√£o")
            coef_df = pd.DataFrame({
                'Vari√°vel': [nomes_extenso.get(col, col) for col in X.columns],
                'Coeficiente': modelo.coef_
            })
            st.dataframe(coef_df)
            st.write(f"**Intercepto**: {modelo.intercept_:.2f}")

            # Mostrar m√©tricas de valida√ß√£o
            st.markdown("#### Resultado da Valida√ß√£o")
            st.write(f"**Erro Absoluto M√©dio** (MAE): {mean_absolute_error(y_test, y_pred):.2f}")
            st.write(f"**Erro Quadr√°tico M√©dio** (MSE): {mean_squared_error(y_test, y_pred):.2f}")
            st.write(f"**Raiz do Erro Quadr√°tico M√©dio** (RMSE): {np.sqrt(mean_squared_error(y_test, y_pred)):.2f}")
            st.write(f"**Coeficiente de Determina√ß√£o** (R¬≤): {r2_score(y_test, y_pred):.2f}")
        else:
            st.warning("Selecione ao menos uma vari√°vel para prosseguir.")

        st.markdown('#### Valores Reais vs Valores Previsto')
        df_result = pd.DataFrame({'Real': y_test, 'Previsto': y_pred})
        # Gr√°fico de dispers√£o real x previsto
        fig, ax = plt.subplots(figsize=(6, 4))
        sns.scatterplot(x='Real', y='Previsto', data=df_result, ax=ax)
        ax.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--')
        ax.set_xlabel('Pre√ßo Real (milhares US$)')
        ax.set_ylabel('Pre√ßo Previsto (milhares US$)')
        st.pyplot(fig)

    with tab2:
        #--- Previs√£o -----  
        st.markdown('### Previs√£o de Pre√ßos')
        @st.cache_data
        def load_data():
            url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.data'
            columns = [
                'CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE',
                'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV'
            ]
            df = pd.read_csv(url, delim_whitespace=True, names=columns)
            return df
        df = load_data()

        @st.cache_resource
        def train_model(df):
            X = df.drop('MEDV', axis=1)
            y = df['MEDV']
            modelo = LinearRegression()
            modelo.fit(X, y)
            return modelo

        modelo = train_model(df)

        # Entrada de dados
        st.markdown('Ajuste os valores das vari√°veis para prever o pre√ßo do im√≥vel:')
        st.markdown('')
        # Entradas do usu√°rio
        crim = st.slider('Taxa de criminalidade (CRIM)', 0.0, 100.0, 0.1)
        zn = st.slider('Propor√ß√£o de terrenos residenciais (ZN)', 0.0, 100.0, 0.0)
        indus = st.slider('Propor√ß√£o de √°rea industrial (INDUS)', 0.0, 30.0, 1.0)
        chas = st.selectbox('Faz fronteira com rio Charles? (CHAS) (0 = N√£o; 1 = Sim)', [0, 1])
        nox = st.slider('Concentra√ß√£o de √≥xidos de nitrog√™nio (NOX)', 0.3, 1.0, 0.5)
        rm = st.slider('N√∫mero m√©dio de quartos (RM)', 3.0, 9.0, 6.0)
        age = st.slider('Propor√ß√£o de unidades antigas (AGE)', 0.0, 100.0, 50.0)
        dis = st.slider('Dist√¢ncia para centros de emprego (DIS)', 1.0, 12.0, 4.0)
        rad = st.slider('Acessibilidade a rodovias (RAD)', 1, 24, 1)
        tax = st.slider('Taxa de imposto sobre propriedade (TAX)', 100, 800, 300)
        ptratio = st.slider('Propor√ß√£o aluno/professor (PTRATIO)', 10.0, 30.0, 18.0)
        b = st.slider('Propor√ß√£o de afro-americanos (B)', 0.0, 400.0, 300.0)
        lstat = st.slider('% de status socioecon√¥mico baixo (LSTAT)', 0.0, 40.0, 12.0)

        # Prever
        input_data = pd.DataFrame(
            [[crim, zn, indus, chas, nox, rm, age, dis, rad, tax, ptratio, b, lstat]],
            columns=[
                'CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE',
                'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT'
            ]
        )

        if st.button('Prever Pre√ßo'):
            prediction = modelo.predict(input_data)[0]
            st.success(f'üí∞ Pre√ßo estimado: US${prediction * 1000:,.2f}')
 
    st.markdown('### Conclus√µes') 
    st.markdown(' üöß Em desenvolvimento üîß')

# --- Barra Lateral ---
st.sidebar.title('Menu')
selection = st.sidebar.radio('Ir para:',
                            ['**In√≠cio**',
                            'Dashboard de Vendas',
                            'An√°lise Explorat√≥ria de Dados',
                            'Modelo Preditivo'])

if selection == '**In√≠cio**':
    pagina_inicio()
elif selection == 'Dashboard de Vendas':
    projeto_1()
elif selection == 'An√°lise Explorat√≥ria de Dados':
    projeto_2()
elif selection == 'Modelo Preditivo':
    projeto_3()


# --- Rodap√© ---
st.markdown('-------------')
st.markdown('Desenvolvido com [Streamlit](https://streamlit.io) | ¬© 2025 Erica Yumi Onoue.')